{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from 'redux-thunk';\nimport BookReducer from \"../Reducer/BookReducer\"; // This import come from npm redux dev tool extension helper \n\nimport { composeWithDevTools } from 'redux-devtools-extension'; // Middleware written as ES5 functions\n// Outer function:\n\nfunction exampleMiddleware(storeAPI) {\n  return function wrapDispatch(next) {\n    return function handleAction(action) {\n      // Do anything here: pass the action onwards with next(action),\n      // or restart the pipeline with storeAPI.dispatch(action)\n      // Can also use storeAPI.getState() here\n      console.log('object');\n      return next(action);\n    };\n  };\n} // When i have lots of reducer components then combine \n\n\nconst rootReducer = combineReducers({\n  books: BookReducer\n}); // middleware library example redux SAGA redux THUNK\n// middleware for get data from api\n\nconst middleware = applyMiddleware(thunk);\nexport const store = createStore(rootReducer, composeWithDevTools(middleware));","map":{"version":3,"sources":["/home/umar/Desktop/Web development/redux-book-shelf/src/Redux/Store/Store.js"],"names":["applyMiddleware","combineReducers","createStore","thunk","BookReducer","composeWithDevTools","exampleMiddleware","storeAPI","wrapDispatch","next","handleAction","action","console","log","rootReducer","books","middleware","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;AAEA;;AACA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,SAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,WAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACnC;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOJ,IAAI,CAACE,MAAD,CAAX;AACD,KAND;AAOD,GARD;AASD,C,CAEH;;;AACA,MAAMG,WAAW,GAAGb,eAAe,CAAC;AAChCc,EAAAA,KAAK,EAAGX;AADwB,CAAD,CAAnC,C,CAIA;AACA;;AACA,MAAMY,UAAU,GAAGhB,eAAe,CAACG,KAAD,CAAlC;AAEA,OAAO,MAAMc,KAAK,GAAGf,WAAW,CAACY,WAAD,EAAaT,mBAAmB,CAACW,UAAD,CAAhC,CAAzB","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from 'redux-thunk';\nimport BookReducer from \"../Reducer/BookReducer\";\n// This import come from npm redux dev tool extension helper \nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Middleware written as ES5 functions\n\n// Outer function:\nfunction exampleMiddleware(storeAPI) {\n    return function wrapDispatch(next) {\n      return function handleAction(action) {\n        // Do anything here: pass the action onwards with next(action),\n        // or restart the pipeline with storeAPI.dispatch(action)\n        // Can also use storeAPI.getState() here\n        console.log('object');\n        return next(action)\n      }\n    }\n  }\n\n// When i have lots of reducer components then combine \nconst rootReducer = combineReducers({\n    books : BookReducer\n})\n\n// middleware library example redux SAGA redux THUNK\n// middleware for get data from api\nconst middleware = applyMiddleware(thunk)\n\nexport const store = createStore(rootReducer,composeWithDevTools(middleware))"]},"metadata":{},"sourceType":"module"}